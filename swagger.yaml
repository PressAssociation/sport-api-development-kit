swagger: '2.0'
info:
  version: '1.0'
  title: Sport API
  description: Welcome to the Press Association Sport API Developer Documentation.
host: sport.api.press.net
basePath: /v1
securityDefinitions:
  apikey:
    type: apiKey
    name: apikey
    in: header
schemes:
  - https
  - http
produces:
  - application/json
  - application/xml
paths:
  /:
    get:
      description: >-
        Return a collection of available resources. This endpoint is for navigation of the API only.
        Some of the endpoints are not navigable without suppling the required parameters in with the request.
      operationId: getResources
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            type: object
          examples:
            application/json: |-
              {
                "links": [
                  {
                    "rel": "self",
                    "href": "http://sport-uat.api.press.net/v1"
                  },
                  {
                    "rel": "sport-collection",
                    "href": "http://sport-uat.api.press.net/v1/sport"
                  }
                ]
              }
  /country:
    get:
      description: Return a collection of countries.
      tags:
        - Country
      operationId: listCountries
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/limit'
          maximum: 100
        - $ref: '#/parameters/offset'
      responses:
        "200":
          description: "Country Collection Response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Country"
          examples:
            application/json: |-
              [
                {
                  "id": 4,
                  "name": "England",
                  "lastUpdated": "2017-01-01T00:00:00.000Z"
                }
              ]
  '/country/{countryId}':
    get:
      description: Return the country's details.
      tags:
        - Country
      operationId: getCountry
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: countryId
          description: The identifier for the country requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  /draw:
    get:
      description: Return a collection of draws.
      tags:
        - Draw
      operationId: listDraws
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseParentId'
          name: stage
          required: true
          description: The Stage Id for the draw selection.
        - $ref: '#/parameters/limit'
          maximum: 30
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/draw/{drawId}':
    get:
      description: Return the draw's details.
      tags:
        - Draw
      operationId: getDraw
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: drawId
          description: The identifier for the draw requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  /event:
    get:
      description: >-
        Return a collection of events. One request parameter is required unless
        the combination of country and sport is used.
      tags:
        - Event
      operationId: listEvents
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseParentId'
          name: sport
          description: The Sport Id for the event selection.
        - $ref: '#/parameters/baseParentId'
          name: country
          description: The Country Id for the event selection.
        - $ref: '#/parameters/baseParentId'
          name: tournament
          description: The Tournament Id for the event selection.
        - $ref: '#/parameters/baseParentId'
          name: season
          description: The Season Id for the event selection.
        - $ref: '#/parameters/baseParentId'
          name: stage
          description: The stage Id for the event selection.
        - $ref: '#/parameters/baseDate'
          name: start
        - $ref: '#/parameters/baseDate'
          name: end
        - $ref: '#/parameters/limit'
          maximum: 20
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/event/{eventId}':
    get:
      description: Return the event's details.
      tags:
        - Event
      operationId: getEvent
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: eventId
          description: The identifier for the event requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/event/{eventId}/actions':
    get:
      description: Return the event's actions.
      tags:
        - Event
      operationId: getEventActions
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: eventId
          description: The identifier for the event requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/event/{eventId}/composition':
    get:
      description: Return the event composition.
      tags:
        - Event
      operationId: getEventComposition
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: eventId
          description: The identifier for the event requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/participant/{participantId}':
    get:
      description: Return the participant's details.
      tags:
        - Participant
      operationId: getParticipant
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: participantId
          description: The identifier for the participant requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  /season:
    get:
      description: Return a collection of seasons.
      tags:
        - Season
      operationId: listSeasons
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseParentId'
          name: tournament
          description: The Tournament Id for the event selection.
        - $ref: '#/parameters/limit'
          maximum: 30
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/season/{seasonId}':
    get:
      description: Return the season's details.
      tags:
        - Season
      operationId: getSeason
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: seasonId
          description: The identifier for the season requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  /sport:
    get:
      description: Return a collection of sports.
      tags:
        - Sport
      operationId: listSports
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/limit'
          maximum: 30
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/sport/{sportId}':
    get:
      description: Return the standing's details.
      tags:
        - Sport
      operationId: getSport
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: sportId
          description: The identifier for the sport requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  /standing:
    get:
      description: |
        Return a collection of standings.

        - One of: sport,
        tournament, season, stage, participant, event should be supplied
      tags:
        - Standing
      operationId: listStandings
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseDate'
          name: start
        - $ref: '#/parameters/baseDate'
          name: end
        - $ref: '#/parameters/baseParentId'
          name: sport
          description: The Sport Id for the standings selection.
        - $ref: '#/parameters/baseParentId'
          name: tournament
          description: The Tournament Id for the standings selection.
        - $ref: '#/parameters/baseParentId'
          name: season
          description: The Season Id for the standings selection.
        - $ref: '#/parameters/baseParentId'
          name: stage
          description: The Stage Id for the standings selection.
        - $ref: '#/parameters/baseParentId'
          name: event
          description: The Event Id for the standings selection.
        - $ref: '#/parameters/baseParentId'
          name: participant
          description: The Participant Id for the standings selection.
        - $ref: '#/parameters/limit'
          maximum: 20
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/standing/{standingId}':
    get:
      description: Return the standing's details.
      tags:
        - Standing
      operationId: getStanding
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: standingId
          description: The identifier for the standing requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  /stage:
    get:
      description: |
        Return a collection of stages.

        - At least one of sport
        or season must be supplied
      tags:
        - Stage
      operationId: getStages
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseDate'
          name: start
        - $ref: '#/parameters/baseDate'
          name: end
        - $ref: '#/parameters/baseParentId'
          name: sport
          description: The Sport Id for the stage selection.
        - $ref: '#/parameters/baseParentId'
          name: season
          description: The Season Id for the stage selection.
        - $ref: '#/parameters/limit'
          maximum: 50
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/stage/{stageId}':
    get:
      description: Return the stage's details.
      tags:
        - Stage
      operationId: getStage
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: stageId
          description: The identifier for the stage requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  /tournament:
    get:
      description: Return a collection of tournaments.
      tags:
        - Tournament
      operationId: listTournament
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseParentId'
          name: sport
          description: The Sport Id for the tournament selection.
        - $ref: '#/parameters/limit'
          maximum: 50
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/tournament/{tournamentId}':
    get:
      description: Return the tournament's details.
      tags:
        - Tournament
      operationId: getTournament
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: tournamentId
          description: The identifier for the tournament requested.
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/venue/{venueId}':
    get:
      description: Return the venue's details.
      tags:
        - Venue
      operationId: getVenue
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/baseEntityId'
          name: venueId
          description: The identifier for the venue requested.
      responses:
        '200':
          description: ''
          schema:
            type: object

definitions:
  Country:
    type: "object"
    required:
      - "id"
      - "name"
    properties:
      id:
        type: "integer"
      name:
        type: "string"

parameters:
  Accept:
    name: Accept
    in: header
    required: true
    type: string
    enum:
      - application/json
      - application/xml
    description: The response format.
  baseParentId:
    name: baseParentId
    in: query
    required: false
    type: integer
    format: int32
    description: The identifier of the parent entity whose children are requested.
    x-example: 415
  baseDate:
    name: baseDate
    in: query
    required: false
    type: string
    format: 'date-time'
    x-example: 2014-04-17
    description: >-
      Limit the entities to ones within the specified range.
      The 'end' parameter is typically used in combination with the 'start' param to form a date range.

      Formats Supported:
       'YYYY-MM-DD'
       'YYYY-MM-DD[T]HH:mm:ssZ'
       'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
       'YYYY-MM-DD[T]HH:mm:ss'
       'YYYY-MM-DD[T]HH:mm'
       'now'
       'today'
       'tomorrow'
       'now.plus.n'
       'now.minus.n'
  baseEntityId:
    name: baseEntityId
    in: path
    required: true
    type: integer
    format: int32
    description: The identifier for the entity requested.
    x-example: 4713
  limit:
    name: limit
    in: query
    required: false
    type: integer
    format: int32
    default: 20
    x-example: 5
    description: >-
      Limit the the number of items to be returned per page.
      The 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.
  offset:
    name: offset
    in: query
    required: false
    default: 0
    type: integer
    format: int32
    x-example: 50
    description: >-
      The offset of the first item to be returned.
      The 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.
